I"Ë<h1 id="initial-project-setup">Initial Project Setup</h1>
<p>I was originally going to use <strong>Sharpmake</strong> as the build system for the project, it is very powerful, fast, and easy for anyone who is familiar with programming since the configuration is done in C#. However, Iâ€™m currently running into issues with the most recent distribution and I didnâ€™t want to spend any more time debugging instead of working on the project. If the scope of the build system starts getting out of hand Iâ€™ll switch over and work through the issues, but for the sake of getting up and running ASAP weâ€™re going to use <strong>premake5</strong> for the time being, a more than capable build configuration manager, and my preferred system outside <strong>Sharpmake</strong>.</p>

<h2 id="downloading-premake-binaries-and-license">Downloading Premake Binaries and License</h2>
<p>Follow this link: https://github.com/premake/premake-core/releases</p>

<p>Click the version you want to download, Iâ€™m using <strong>Premake 5.0-beta1</strong>
<img src="/assets/img/premake_setup/exe_download.png" alt="Premake Download" /></p>

<p>This will download a zip file containing the executable we need. 
<img src="/assets/img/premake_setup/exe_archive.png" alt="Premake Download" /></p>

<p>Un-zip this file and move it to the root directory of your project, and create a new file called <strong>premake5.lua</strong> 
<em>premake looks for this file by name specifically so make sure itâ€™s correct.</em></p>

<h2 id="setting-up-the-solution">Setting up the solution</h2>
<p><em>explain basic file hierarchy here</em></p>

<h2 id="making-the-core-engine-project">Making the core engine project</h2>

<h2 id="making-the-testbed-project">Making the testbed project</h2>

<h2 id="making-a-bat-file-to-run-the-steps-for-us">Making a bat file to run the steps for us</h2>

<p><em>insert screenshot of vs2019 solution</em></p>

<p><em>insert next step teaser: engine to testbed interaction and logging</em></p>
:ET