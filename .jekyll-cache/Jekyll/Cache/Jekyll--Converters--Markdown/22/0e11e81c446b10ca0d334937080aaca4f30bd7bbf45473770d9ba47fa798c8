I"}<p>I love making games! <br />
Telling your own story, bringing your imagination to life, creating new worlds for people discover and explore.<br />
But I also love understanding how things work, breaking them apart to see what lies beneath, and building my own version to affirm my understanding.<br />
So when I first began learning how to program with the intention of pursuing a job creating games, it’s unsurprising that I gravitated towards game engines and understanding how a button press could make a character dance, or how I could see anything on the screen to begin with. The more I’ve learned over the years the further I want to dig. I’ve built several game engines in the past, but whenever a new project catches my attention I can’t help but throw everything away and start again with the lessons I’ve learned and a fresh set of ideas. This however, is not conducive to building new games since by the time I’ve rebuilt enough of the engine to get something working the spark has usually died out.</p>

<p>My intention with documenting my adventures this time around are twofold; firstly, as engines like Unity and Unreal get better and better, I see fewer and fewer people pursuing the rigorous task of building the foundation for their vision themselves. This is entirely understandable given the time investment required to take on such a task and the very real possibility that too few people will see the end result to justify the investment. However, I would like to share any knowledge that I’ve gained and any I hope to gain this time around, in the hopes that it will make the process easy enough as to not dissuade someone before they’ve begun. Also, many AAA game studios still use custom engines, so if you are reading this and intend on working at one of those companies in the future, and understanding of the architecture and underlying systems will serve you well.</p>
:ET