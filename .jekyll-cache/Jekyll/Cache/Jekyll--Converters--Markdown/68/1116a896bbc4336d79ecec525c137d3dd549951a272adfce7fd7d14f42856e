I"ê<h2 id="intro">Intro</h2>

<p>There have been many times since I started my programming journey where it‚Äôs been made obvious to me how significant the hardware is to the programs we write. Being that all code is essentially a sequence of data transformations, the most important part of writing something that runs efficiently is having an understanding of what that data is, and precisely what we want to do with it. To figure out the best way to transform the data, one would imagine that knowing what is physically possible on a given piece of hardware would be a useful bit of information.</p>

<p>I have a general sense of things that helpful and harmful to this endeavor, but I‚Äôm nowhere near the level I‚Äôd like to be at. I stumbled upon an amazing <a href="https://www.nand2tetris.org/">website</a>/course called nand2tetris that starts from simple NAND gates and builds up chip by chip to a working simulated computer. This and a few other resources will comprise the bulk of the info I plan on consuming in this space. I will be working on this in parallel to the game engine series where I will be thinking about Intel‚Äôs architecture specifically, and will apply what I‚Äôm learning building my own architecture to problems I face there.</p>

<p>The motivation for building my own architecture from primitive blocks is to help build intuition for hardware architecture in a general sense, as well as u</p>
:ET